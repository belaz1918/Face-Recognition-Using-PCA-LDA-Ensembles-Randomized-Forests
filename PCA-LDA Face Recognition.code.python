import numpy as np
from sklearn.decomposition import PCA
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis as LDA
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score, confusion_matrix

# Apply PCA
pca = PCA(n_components=50)
train_pca = pca.fit_transform(train_images)
test_pca = pca.transform(test_images)

# Apply LDA
lda = LDA(n_components=15)
train_lda = lda.fit_transform(train_pca, train_labels)
test_lda = lda.transform(test_pca)

# Classification using k-NN
knn = KNeighborsClassifier(n_neighbors=1)
knn.fit(train_lda, train_labels)
predictions = knn.predict(test_lda)

# Evaluate
accuracy = accuracy_score(test_labels, predictions)
conf_matrix = confusion_matrix(test_labels, predictions)
print(f"Recognition Accuracy: {accuracy * 100:.2f}%")
print("Confusion Matrix:")
print(conf_matrix)