import numpy as np
from sklearn.decomposition import PCA
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis as LDA
from sklearn.utils import resample
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score

# Bagging with PCA-LDA
ensemble_predictions = []
for _ in range(17):  # Number of models
    resampled_images, resampled_labels = resample(train_images, train_labels)
    pca = PCA(n_components=50)
    lda = LDA(n_components=15)
    train_pca = pca.fit_transform(resampled_images)
    train_lda = lda.fit_transform(train_pca, resampled_labels)

    knn = KNeighborsClassifier(n_neighbors=1)
    knn.fit(train_lda, resampled_labels)
    test_pca = pca.transform(test_images)
    test_lda = lda.transform(test_pca)
    predictions = knn.predict(test_lda)
    ensemble_predictions.append(predictions)

# Majority voting
ensemble_predictions = np.array(ensemble_predictions)
final_predictions = np.apply_along_axis(lambda x: np.bincount(x).argmax(), axis=0, arr=ensemble_predictions)

# Evaluate ensemble
ensemble_accuracy = accuracy_score(test_labels, final_predictions)
print(f"Ensemble Accuracy: {ensemble_accuracy * 100:.2f}%")